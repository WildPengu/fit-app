{"version":3,"sources":["layouts/Header.js","layouts/BmiCalculator/components/BmiRanges.js","components/inputField/InputField.js","components/primaryButton/PrimaryButton.js","layouts/BmiCalculator/BmiInfo.js","layouts/BmiCalculator/BmiCalculator.js","layouts/CaloriesCalculator/CaloriesInfo.js","layouts/CaloriesCalculator/Components/activityLevel/ActivityLevel.js","layouts/CaloriesCalculator/Components/genderInputHolder/GenderInputHolder.js","layouts/CaloriesCalculator/Calories.js","layouts/yourTraining/components/addExercise/AddExercise.js","layouts/yourTraining/components/addTrainingDay/AddTrainingDay.js","layouts/yourTraining/components/addSeries/AddSeries.js","layouts/yourTraining/YourTraining.js","layouts/yourTraining/components/showTrainingDays/ShowTrainingDays.js","layouts/App/App.js","index.js"],"names":["Header","className","to","React","Component","InputField","this","props","label","type","name","value","onChange","units","error","onClick","children","BmiInfo","href","BmiCalculator","state","weight","height","message","result","bmiRanges","min","max","errors","runBmiCalculating","bmi","calculateBmi","setState","mapBmiToText","toFixed","modifiedHeight","el","updateFieldValue","e","target","runValidation","areAllFieldsValid","isValid","_","forEach","item","key","bmiEndingResult","bmiValidationError","console","log","PrimaryButton","BmiRanges","CaloriesInfo","GenderInputHolder","femaleClass","female","maleClass","male","Calories","age","gender","activityLevel","calories","bmr","calculateBmr","genderOnClick","getAttribute","calculateCaloriesRequired","updateFieldsValue","allFieldsValid","calculateCalories","caloriesValidationError","genderMaleClass","genderFemaleClass","AddExercise","exerciseIdCounter","updateExerciseName","exerciseName","test","addExercise","isValidationCorrect","exercise","id","getExercisesList","exercises","map","selectExercise","window","confirm","deleteExercise","placeholder","AddTrainingDay","dateIdCounter","formatTimeUnit","time","addTrainingDay","calendar","Date","today","getDate","getMonth","getFullYear","date","allDates","trainingDays","training","selectDate","shouldShowAddButton","filter","trainingDay","AddSeries","updateInputValue","getActiveSeries","dateId","exerciseId","userSeries","repetitions","addNewSeriesToRepetitions","amount","activeSeries","activeDate","activeExercise","push","newRepetitionValue","sets","set","index","yourTraining","addExerciseToState","series","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d118f83a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"menu\">\r\n          <ul className=\"menuList\">\r\n            <li>\r\n              <Link to=\"/fit-app\">Kalkulator BMI</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/calories\">Kalkulator kalorii</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/yourTraining\">Zaplanuj swój trening</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"bmiListHolder\">\r\n      <p className=\"bmiListTitle\">Zakresy wartości BMI:</p>\r\n      <ul className=\"bmiList\">\r\n        <li>mniej niż 16 - wygłodzenie</li>\r\n        <li>16 - 16.99 - wychudzenie</li>\r\n        <li>17 - 18.49 - niedowaga</li>\r\n        <li>18.5 - 24.99 - wartość prawidłowa</li>\r\n        <li>25 - 29.99 - nadwaga</li>\r\n        <li>30 - 34.99 - I stopień otyłości</li>\r\n        <li>35 - 39.99 - II stopień otyłości</li>\r\n        <li>powyżej 40 - otyłość skrajna</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./InputField.css\";\r\n\r\nexport class InputField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"inputBox\">\r\n        <div className=\"innerInputBox\">\r\n          <label className=\"inputDescribe\">{this.props.label}</label>\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"inputHolder\"\r\n              name={this.props.name}\r\n              value={this.props.value}\r\n              onChange={this.props.onChange}\r\n            ></input>\r\n          </div>\r\n          <span className=\"inputUnits\">{this.props.units}</span>\r\n        </div>\r\n        {this.props.error}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <button onClick={props.onClick} className=\"primaryButton\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const BmiInfo = () => {\r\n  return (\r\n    <div className=\"bonusInfoHolder\">\r\n      <div className=\"bonusInfoBMI\">\r\n        <h2 className=\"bonusInfoTitle\">Kalkulator BMI</h2>\r\n        <p className=\"bonusInfoDescription\">\r\n          Kalkulator <strong>BMI</strong> (Body Mass Index) daje każdemu\r\n          możliwość szybkiego i wygodego obliczenia własnego wskaźnika masy\r\n          ciała. BMI obliczamy dzieląc masę ciała (w kilogramach) przez wzrost\r\n          do kwadratu (w metrach). Wskaźnik ten wykorzystywany jest przede\r\n          wszystkim do oceny ryzyka pojawienia się groźnych chorób: miażdżycy,\r\n          choroby niedokrwiennej serca, udaru mózgu, czy nawet nowotworów.\r\n          Większość tych chorób jest związana z otyłością i dlatego kalkulator\r\n          BMI to tak przydatne narzędzie.\r\n        </p>\r\n      </div>\r\n      <div className=\"bonusInfoBMI\">\r\n        <h2 className=\"bonusInfoTitle\">Czym jest BMI?</h2>\r\n        <p className=\"bonusInfoDescription\">\r\n          BMI jest jednym z ważnych wskaźniów określających nasz stan fizyczny,\r\n          ale niestety nie wystarczającym. Bardzo ważnym uzupełnieniem BMI jest\r\n          wskaźnik ilości tłuszczu brzusznego - zbyt duży może oznaczać\r\n          niebezpieczną otyłość brzuszną i to nawet przy prawidłowym BMI!\r\n          Ponadto, paradoksalnie, badania naukowe wskazują, że osoby z lekką\r\n          nadwagą zwykle są zdrowsze i żyją dłużej od osób z tzw. \"prawidłową\r\n          wagą\". Pojawiają się nawet głosy, że ustalony arbitralnie przez{\" \"}\r\n          <a href=\"https://www.who.int/\">WHO</a> próg nadwagi (25) jest zbyt\r\n          niski.\r\n        </p>\r\n      </div>\r\n      <div className=\"bonusInfoBMI\">\r\n        <h2 className=\"bonusInfoTitle\">Pamiętaj</h2>\r\n        <p className=\"bonusInfoDescription\">\r\n          Kalkulator BMI obrazuje przybliżoną zawartość tłuszczu w organiźmie. W\r\n          przypadku niektórych osób wskaźnik BMI może sugerować błędne wnioski.\r\n          Osoby aktywne fizycznie, uprawiający sport, mogą posiadać zawyżoną\r\n          wagę związaną z tkanką mięśniową a nie z ilością tłuszczu w\r\n          organiźmie. Ponadto nie zaleca się stosowania wskaźnika BMI do\r\n          oznaczania wagi ciała dla dzieci do ok. 14 roku życia oraz dla kobiet\r\n          w ciąży.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport BmiRanges from \"./components/BmiRanges\";\r\nimport { InputField } from \"../../components/inputField/InputField\";\r\nimport PrimaryButton from \"../../components/primaryButton/PrimaryButton\";\r\nimport \"../../components/primaryButton/PrimaryButton.css\";\r\nimport { BmiInfo } from \"./BmiInfo\";\r\n\r\nexport class BmiCalculator extends React.Component {\r\n  state = {\r\n    weight: \"\",\r\n    height: \"\",\r\n    message: \"\",\r\n    result: \"\",\r\n    bmiRanges: [\r\n      {\r\n        min: 0,\r\n        max: 16,\r\n        result: \"wygłodzenie\"\r\n      },\r\n      {\r\n        min: 16,\r\n        max: 17,\r\n        result: \"wychudzenie\"\r\n      },\r\n      {\r\n        min: 17,\r\n        max: 18.5,\r\n        result: \"niedowaga\"\r\n      },\r\n      {\r\n        min: 18.5,\r\n        max: 25,\r\n        result: \"wartość prawidłowa\"\r\n      },\r\n      {\r\n        min: 25,\r\n        max: 30,\r\n        result: \"nadwaga\"\r\n      },\r\n      {\r\n        min: 30,\r\n        max: 35,\r\n        result: \"I stopień otyłości\"\r\n      },\r\n      {\r\n        min: 35,\r\n        max: 40,\r\n        result: \"II stopień otyłości\"\r\n      },\r\n      {\r\n        min: 40,\r\n        max: 10000,\r\n        result: \"otyłość skrajna\"\r\n      }\r\n    ],\r\n    errors: {\r\n      weight: \"\",\r\n      height: \"\"\r\n    }\r\n  };\r\n\r\n  runBmiCalculating = (height, weight) => {\r\n    const bmi = this.calculateBmi(height, weight);\r\n    this.setState({\r\n      message: this.mapBmiToText(bmi),\r\n      result: bmi.toFixed(2)\r\n    });\r\n  };\r\n\r\n  calculateBmi = (height, weight) => {\r\n    let modifiedHeight = height / 100;\r\n    return weight / (modifiedHeight * modifiedHeight);\r\n  };\r\n\r\n  mapBmiToText = result => {\r\n    for (let el of this.state.bmiRanges) {\r\n      if (el.min < result && el.max > result) {\r\n        return el.result;\r\n      }\r\n    }\r\n  };\r\n\r\n  updateFieldValue = e => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  runValidation = () => {\r\n    let errors = {\r\n      height: \"\",\r\n      weight: \"\"\r\n    };\r\n\r\n    if (this.state.height === \"\") {\r\n      errors.height = \"podaj wzrost\";\r\n    }\r\n\r\n    if (this.state.weight === \"\") {\r\n      errors.weight = \"podaj wagę\";\r\n    }\r\n\r\n    this.setState({\r\n      errors\r\n    });\r\n\r\n    return errors;\r\n  };\r\n\r\n  areAllFieldsValid = errors => {\r\n    let isValid = true;\r\n    _.forEach(errors, (item, key) => {\r\n      if (item !== \"\") {\r\n        isValid = false;\r\n      }\r\n    });\r\n    return isValid;\r\n  };\r\n\r\n  bmiEndingResult = e => {\r\n    const bmiValidationError = this.runValidation();\r\n    if (this.areAllFieldsValid(bmiValidationError)) {\r\n      console.log(this.state);\r\n      this.runBmiCalculating(this.state.height, this.state.weight);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"mainInformationContainer\">\r\n          <h2 className=\"mainInformationTitle\">Oblicz swój wskaźnik BMI</h2>\r\n          <InputField\r\n            label=\"Waga:\"\r\n            units=\"kg\"\r\n            name=\"weight\"\r\n            error={this.state.errors.weight}\r\n            value={this.state.weight}\r\n            onChange={this.updateFieldValue}\r\n          />\r\n\r\n          <InputField\r\n            label=\"Wzrost:\"\r\n            units=\"cm\"\r\n            name=\"height\"\r\n            error={this.state.errors.height}\r\n            value={this.state.height}\r\n            onChange={this.updateFieldValue}\r\n          />\r\n\r\n          <div className=\"calculateButtonHolder\">\r\n            <PrimaryButton onClick={this.bmiEndingResult}>Oblicz</PrimaryButton>\r\n          </div>\r\n          <BmiRanges />\r\n          <div>\r\n            {this.state.message !== \"\"\r\n              ? \"Twój wynik BMI: \" +\r\n                this.state.result +\r\n                \"-\" +\r\n                this.state.message\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <BmiInfo />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./CaloriesInfo.css\";\r\n\r\nconst CaloriesInfo = () => {\r\n  return (\r\n    <div className=\"bonusInfoHolder\">\r\n      <div className=\"bonusInfoCalories\">\r\n        <h2 className=\"bonusInfoTitle\">Kalkulator kalorii</h2>\r\n        <p className=\"bonusInfoDescription\">\r\n          Kalkulator kalorii umożliwia szybkie i wygodne wyliczenie własnego\r\n          dziennego zapotrzebowania na kalorie oraz poznanie wskaźnika BMR.\r\n          Wskaźnik podstawowej przemiany materii (Basal Metabolic Rate, BMR)\r\n          jest minimalnym dziennym zapotrzebowaniem energetycznym koniecznym do\r\n          podtrzymania podstawowych procesów życiowych ciała w spoczynku.\r\n        </p>\r\n      </div>\r\n      <div className=\"bonusInfoCalories\">\r\n        <h2 className=\"bonusInfoTitle\">Pamiętaj</h2>\r\n        <p className=\"bonusInfoDescription\">\r\n          Każdy organizm jest inny! Podane przez kalkulator kalorii wartości\r\n          mają charakter orientacyjny i pomocniczy. Żadne narzędzie nie zastąpi\r\n          konsultacji ze specjalistą! Zamieszczone informacje nie mogą być\r\n          podstawą do przeprowadzenia samodiagnozy czy leczenia.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaloriesInfo;\r\n","import React from \"react\";\r\nimport \"./ActivityLevel.css\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"exerciseLevelContainer\">\r\n      <label className=\"exerciseLevelTitle\">Poziom aktywności fizycznej:</label>\r\n      <select name={props.name} onChange={props.onChange}>\r\n        <option value=\"1.2\">Brak aktywności fizycznej</option>\r\n        <option value=\"1.4\">Mała aktywność fizyczna (1-3 tygodniowo)</option>\r\n        <option value=\"1.6\">średnia aktywność fizyczna (3-5 tygodniowo)</option>\r\n        <option value=\"1.8\">Duża aktywność fizyczna (codziennie)</option>\r\n        <option value=\"2\">Bardzo duża aktywnosć fizyczna</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./GenderInputHolder.css\";\r\n\r\nexport class GenderInputHolder extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"genderInputContainer\">\r\n        <div className=\"genderInputDescribe\">\r\n          <label>Płeć:</label>\r\n        </div>\r\n        <div className=\"genderHolder\">\r\n          <span\r\n            className={this.props.femaleClass + \" \" + `radio-btn`}\r\n            name={this.props.female}\r\n            onClick={this.props.onClick}\r\n          ></span>\r\n          <span className=\"genderOption\">K</span>\r\n        </div>\r\n        <div className=\"genderHolder\">\r\n          <span\r\n            className={this.props.maleClass + \" \" + `radio-btn`}\r\n            name={this.props.male}\r\n            onClick={this.props.onClick}\r\n          ></span>\r\n          <span className=\"genderOption\">M</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Calories.css\";\r\nimport _ from \"lodash\";\r\nimport CaloriesInfo from \"./CaloriesInfo\";\r\nimport PrimaryButton from \"../../components/primaryButton/PrimaryButton.js\";\r\nimport { InputField } from \"../../components/inputField/InputField\";\r\nimport ActivityLevel from \"./Components/activityLevel/ActivityLevel\";\r\nimport { GenderInputHolder } from \"./Components/genderInputHolder/GenderInputHolder\";\r\n\r\nexport class Calories extends React.Component {\r\n  state = {\r\n    weight: \"\",\r\n    height: \"\",\r\n    age: \"\",\r\n    gender: \"genderMale\",\r\n    activityLevel: \"1.2\",\r\n    calories: \"\",\r\n    bmr: \"\",\r\n    isValid: \"\",\r\n    errors: {\r\n      height: \"\",\r\n      weight: \"\",\r\n      age: \"\"\r\n    }\r\n  };\r\n\r\n  calculateBmr = (height, weight, age) => {\r\n    let bmr;\r\n    if (this.state.gender === \"genderMale\") {\r\n      bmr = 9.99 * weight + 6.25 * height - 4.92 * age + 5;\r\n    }\r\n    if (this.state.gender === \"genderFemale\") {\r\n      bmr = 9.99 * weight + 6.25 * height - 4.92 * age - 161;\r\n    }\r\n    bmr = bmr.toFixed(2);\r\n    this.setState({\r\n      bmr\r\n    });\r\n    return bmr;\r\n  };\r\n\r\n  genderOnClick = e => {\r\n    let gender = e.target.getAttribute(\"name\");\r\n    if (gender === \"genderMale\") {\r\n      this.setState({\r\n        gender: \"genderMale\"\r\n      });\r\n    }\r\n    if (gender === \"genderFemale\") {\r\n      this.setState({\r\n        gender: \"genderFemale\"\r\n      });\r\n    }\r\n    return this.state.gender;\r\n  };\r\n\r\n  calculateCaloriesRequired = activityLevel => {\r\n    let bmr = this.calculateBmr(\r\n      this.state.height,\r\n      this.state.weight,\r\n      this.state.age\r\n    );\r\n    let calories = bmr * activityLevel;\r\n    calories = calories.toFixed(2);\r\n    this.setState({\r\n      calories\r\n    });\r\n    return calories;\r\n  };\r\n\r\n  updateFieldsValue = e => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  runValidation = () => {\r\n    let errors = {\r\n      height: \"\",\r\n      weight: \"\",\r\n      age: \"\"\r\n    };\r\n\r\n    if (this.state.height === \"\") {\r\n      errors.height = \"Podaj wzrost\";\r\n    }\r\n    if (this.state.weight === \"\") {\r\n      errors.weight = \"Podaj wagę\";\r\n    }\r\n    if (this.state.age === \"\") {\r\n      errors.age = \"Podaj wiek\";\r\n    }\r\n\r\n    this.setState({\r\n      errors\r\n    });\r\n\r\n    return errors;\r\n  };\r\n\r\n  allFieldsValid = errors => {\r\n    let isValid = true;\r\n    _.forEach(errors, (item, key) => {\r\n      if (item !== \"\") {\r\n        isValid = false;\r\n        this.setState({ isValid: false });\r\n      }\r\n    });\r\n    return isValid;\r\n  };\r\n\r\n  calculateCalories = e => {\r\n    const caloriesValidationError = this.runValidation();\r\n    if (this.allFieldsValid(caloriesValidationError)) {\r\n      this.setState({ isValid: true });\r\n      this.calculateCaloriesRequired(this.state.activityLevel);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let genderMaleClass =\r\n      this.state.gender === \"genderMale\" ? \"black\" : \"white\";\r\n    let genderFemaleClass =\r\n      this.state.gender === \"genderFemale\" ? \"black\" : \"white\";\r\n    return (\r\n      <>\r\n        <div className=\"caloriesInfoContainer\">\r\n          <h2>Oblicz dzienne zapotrzebowanie na kalorie</h2>\r\n          <GenderInputHolder\r\n            maleClass={genderMaleClass}\r\n            femaleClass={genderFemaleClass}\r\n            male=\"genderMale\"\r\n            female=\"genderFemale\"\r\n            onClick={this.genderOnClick}\r\n          />\r\n          <InputField\r\n            label=\"Wiek:\"\r\n            name=\"age\"\r\n            value={this.state.age}\r\n            onChange={this.updateFieldsValue}\r\n            units=\"(18-99)\"\r\n            error={this.state.errors.age}\r\n          />\r\n          <InputField\r\n            label=\"Waga:\"\r\n            name=\"weight\"\r\n            value={this.state.weight}\r\n            onChange={this.updateFieldsValue}\r\n            units=\"kg\"\r\n            error={this.state.errors.weight}\r\n          />\r\n          <InputField\r\n            label=\"Wzrost:\"\r\n            name=\"height\"\r\n            value={this.state.height}\r\n            onChange={this.updateFieldsValue}\r\n            units=\"cm\"\r\n            error={this.state.errors.height}\r\n          />\r\n          <ActivityLevel\r\n            name=\"activityLevel\"\r\n            onChange={this.updateFieldsValue}\r\n          />\r\n          <div className=\"buttonContainer\">\r\n            <PrimaryButton onClick={this.calculateCalories}>\r\n              Oblicz\r\n            </PrimaryButton>\r\n          </div>\r\n          <div>\r\n            {this.state.isValid === true\r\n              ? \"Twój wynik bmr to:\" + this.state.bmr\r\n              : null}\r\n          </div>\r\n          <div>\r\n            {this.state.isValid === true\r\n              ? \"Twoje dzienne zapotrzebowanie kalorii:\" + this.state.calories\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <CaloriesInfo />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class AddExercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exerciseName: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n  exerciseIdCounter = 3;\r\n\r\n  updateExerciseName = e => {\r\n    this.setState(\r\n      {\r\n        exerciseName: e.target.value\r\n      },\r\n      () => this.runValidation()\r\n    );\r\n  };\r\n\r\n  areAllFieldsValid = error => error === \"\";\r\n\r\n  runValidation = () => {\r\n    let error = \"\";\r\n\r\n    if (this.state.exerciseName === \"\") {\r\n      error = \"Pole jest puste\";\r\n    }\r\n\r\n    if (/[0-9]+/.test(this.state.exerciseName)) {\r\n      error = \"Nie wpisuj liczb\";\r\n    }\r\n\r\n    this.setState({\r\n      error\r\n    });\r\n\r\n    return error;\r\n  };\r\n\r\n  addExercise = () => {\r\n    const isValidationCorrect = this.runValidation();\r\n    if (this.areAllFieldsValid(isValidationCorrect)) {\r\n      const exercise = {\r\n        id: this.exerciseIdCounter,\r\n        name: this.state.exerciseName\r\n      };\r\n      this.exerciseIdCounter++;\r\n      this.props.addExercise(exercise);\r\n      this.setState({\r\n        exerciseName: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  getExercisesList = () => {\r\n    return this.props.exercises.map(exercise => (\r\n      <div key={exercise.id} className=\"exerciseHolder\">\r\n        <div>\r\n          <li\r\n            className=\"exercisesList\"\r\n            onClick={() => this.props.selectExercise(exercise)}\r\n          >\r\n            {exercise.name}\r\n          </li>\r\n        </div>\r\n        <button\r\n          className=\"deleteExerciseButton\"\r\n          onClick={() => {\r\n            const decision = window.confirm(\"Do you really want to delete?\");\r\n            if (decision) {\r\n              this.props.deleteExercise(exercise.id);\r\n            }\r\n          }}\r\n        >\r\n          Usuń\r\n        </button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"exercisesContainer\">\r\n        <div>\r\n          <div>\r\n            <input\r\n              className=\"addExerciseInput\"\r\n              type=\"text\"\r\n              placeholder=\"dodaj zadanie\"\r\n              value={this.state.exerciseName}\r\n              onChange={this.updateExerciseName}\r\n            />\r\n            <button className=\"addExercisebutton\" onClick={this.addExercise}>\r\n              Dodaj\r\n            </button>\r\n          </div>\r\n          <div>{this.state.error}</div>\r\n          <ul>{this.getExercisesList()}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class AddTrainingDay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  dateIdCounter = 3;\r\n\r\n  formatTimeUnit = (time) => (time < 10 ? \"0\" + time : time);\r\n\r\n  addTrainingDay = () => {\r\n    let calendar = new Date(),\r\n      today =\r\n        this.formatTimeUnit(calendar.getDate()) +\r\n        \"-\" +\r\n        this.formatTimeUnit(calendar.getMonth() + 1) +\r\n        \"-\" +\r\n        calendar.getFullYear();\r\n\r\n    const date = {\r\n      id: this.dateIdCounter,\r\n      date: today,\r\n    };\r\n    this.dateIdCounter++;\r\n    this.props.addTrainingDay(date);\r\n  };\r\n\r\n  render() {\r\n    const allDates = this.props.trainingDays.map((training) => (\r\n      <div key={training.date}>\r\n        <li\r\n          className=\"trainingDateList\"\r\n          onClick={() => this.props.selectDate(training)}\r\n        >\r\n          {training.date}\r\n        </li>\r\n      </div>\r\n    ));\r\n\r\n    let calendar = new Date(),\r\n      today =\r\n        calendar.getDate() +\r\n        \"-\" +\r\n        (calendar.getMonth() + 1) +\r\n        \"-\" +\r\n        calendar.getFullYear();\r\n\r\n    const shouldShowAddButton = !this.props.trainingDays.filter(\r\n      (trainingDay) => trainingDay.date === today\r\n    )[0];\r\n\r\n    return (\r\n      <div className=\"calendarContainer\">\r\n        <div>\r\n          {shouldShowAddButton ? (\r\n            <button\r\n              onClick={() => this.addTrainingDay()}\r\n              className=\"dateButton\"\r\n            >\r\n              Dodaj trening\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"trainingDatesCointainer\">\r\n          <ul>{allDates}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class AddSeries extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newRepetitionValue: \"\"\r\n    };\r\n  }\r\n  updateInputValue = e => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  getActiveSeries = (dateId, exerciseId) => {\r\n    if (dateId == null || exerciseId == null) {\r\n      return null;\r\n    }\r\n\r\n    for (let el of this.props.userSeries) {\r\n      if (el.dateId === dateId && el.exerciseId === exerciseId) {\r\n        return el;\r\n      }\r\n    }\r\n    const series = {\r\n      dateId,\r\n      exerciseId,\r\n      repetitions: []\r\n    };\r\n    return series;\r\n  };\r\n\r\n  addNewSeriesToRepetitions = amount => {\r\n    const activeSeries = this.getActiveSeries(\r\n      this.props.activeDate,\r\n      this.props.activeExercise\r\n    );\r\n    activeSeries.repetitions.push(amount);\r\n    this.props.addNewSeriesToRepetitions(activeSeries);\r\n  };\r\n\r\n  render() {\r\n    const activeSeries = this.getActiveSeries(\r\n      this.props.activeDate,\r\n      this.props.activeExercise\r\n    );\r\n    let sets;\r\n    if (activeSeries !== null) {\r\n      sets = (\r\n        <div>\r\n          {activeSeries.repetitions.map((set, index) => (\r\n            <span key={index}>{set + \" \"}</span>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"trainingContainer\">\r\n        <div className=\"clickedExerciseAndDateContainer\">\r\n          <span className=\"clickedExercise\">\r\n            {this.props.activeExercise !== null\r\n              ? this.props.activeExercise.name\r\n              : \"\"}\r\n          </span>\r\n          <span className=\"clickedDate\">\r\n            {this.props.activeDate !== null ? this.props.activeDate.date : \"\"}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            {activeSeries !== null ? (\r\n              <div className=\"addSeriesHolder\">\r\n                <div>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"newRepetitionValue\"\r\n                    className=\"seriesRepeatInput\"\r\n                    onChange={this.updateInputValue}\r\n                  ></input>\r\n                </div>\r\n                <button\r\n                  className=\"addSeriesButton\"\r\n                  onClick={() =>\r\n                    this.addNewSeriesToRepetitions(\r\n                      this.state.newRepetitionValue\r\n                    )\r\n                  }\r\n                >\r\n                  Dodaj\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <p>Dodaj date i ćwiczenie</p>\r\n            )}\r\n          </div>\r\n          {sets}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./YourTraining.css\";\r\nimport { AddExercise } from \"./components/addExercise/AddExercise\";\r\nimport { AddTrainingDay } from \"./components/addTrainingDay/AddTrainingDay\";\r\nimport { AddSeries } from \"./components/addSeries/AddSeries\";\r\nimport { ShowTrainingDays } from \"./components/showTrainingDays/ShowTrainingDays\";\r\n\r\nclass yourTraining extends React.Component {\r\n  exerciseIdCounter = 3;\r\n  state = {\r\n    activeDate: null,\r\n    activeExercise: null,\r\n    exercises: [\r\n      {\r\n        id: 0,\r\n        name: \"Bench press\",\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Pushups\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Squats\",\r\n      },\r\n    ],\r\n    trainingDays: [\r\n      {\r\n        id: 0,\r\n        date: \"05-12-2019\",\r\n      },\r\n      {\r\n        id: 1,\r\n        date: \"06-12-2019\",\r\n      },\r\n      {\r\n        id: 2,\r\n        date: \"08-12-2019\",\r\n      },\r\n    ],\r\n    userSeries: [],\r\n  };\r\n\r\n  addExerciseToState = (exercise) => {\r\n    this.setState({\r\n      exercises: [...this.state.exercises, exercise],\r\n    });\r\n  };\r\n\r\n  deleteExercise = (id) => {\r\n    this.setState({\r\n      exercises: this.state.exercises.filter((exercise) => exercise.id !== id),\r\n    });\r\n  };\r\n\r\n  addTrainingDay = (date) => {\r\n    this.setState({\r\n      trainingDays: [...this.state.trainingDays, date],\r\n    });\r\n  };\r\n\r\n  addNewSeriesToRepetitions = (activeSeries) => {\r\n    this.setState({\r\n      userSeries: [\r\n        ...this.state.userSeries.filter(\r\n          (series) =>\r\n            series.dateId !== this.state.activeDate ||\r\n            series.exerciseId !== this.state.exerciseId\r\n        ),\r\n        activeSeries,\r\n      ],\r\n    });\r\n  };\r\n\r\n  selectDate = (training) => {\r\n    this.setState({ activeDate: training });\r\n  };\r\n\r\n  selectExercise = (exercise) => {\r\n    this.setState({ activeExercise: exercise });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"mainContainer\">\r\n          <AddExercise\r\n            exercises={this.state.exercises}\r\n            selectExercise={this.selectExercise}\r\n            addExercise={this.addExerciseToState}\r\n            deleteExercise={this.deleteExercise}\r\n          />\r\n          <AddSeries\r\n            userSeries={this.state.userSeries}\r\n            activeDate={this.state.activeDate}\r\n            activeExercise={this.state.activeExercise}\r\n            getActiveSeries={this.getActiveSeries}\r\n            addNewSeriesToRepetitions={this.addNewSeriesToRepetitions}\r\n          />\r\n          <AddTrainingDay\r\n            addTrainingDay={this.addTrainingDay}\r\n            trainingDays={this.state.trainingDays}\r\n            selectDate={this.selectDate}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default yourTraining;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"./ShowTrainingDays.css\";\r\n\r\nexport class ShowTrainingDays extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeDate: null\r\n    };\r\n  }\r\n\r\n  getTrainingDaysList = (userSeries, activeExercise, activeDate) => {\r\n    _.forEach(userSeries, (item, key) => {});\r\n    const only = userSeries.filter(\r\n      series => series.exerciseId.id === activeExercise.id\r\n    );\r\n\r\n    let isValid = true;\r\n    _.forEach(only, (item, key) => {\r\n      console.log(item, activeDate);\r\n      if (item.dateId.id !== activeDate.id) {\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    if (isValid) {\r\n      return only.map(trainingDay => (\r\n        <div key={trainingDay.dateId} className=\"trainingDayUnitHolder\">\r\n          <span\r\n            className=\"trainingDay\"\r\n            onClick={() =>\r\n              this.showRepetitions(\r\n                this.props.userSeries,\r\n                this.props.activeExercise,\r\n                this.props.trainingDays\r\n              )\r\n            }\r\n          >\r\n            {trainingDay.dateId.date}\r\n          </span>\r\n        </div>\r\n      ));\r\n    }\r\n  };\r\n\r\n  showRepetitions = (userSeries, activeExercise, trainingDays) => {\r\n    const repetitions = userSeries.filter(\r\n      series => series.exerciseId.id === activeExercise.id\r\n    );\r\n    console.log(userSeries);\r\n    this.setState({\r\n      //activeDate: userSeries.dateId.date\r\n    });\r\n    console.log(this.state.activeDate);\r\n  };\r\n  render() {\r\n    // let sets;\r\n    // if (this.state.activeDate !== null) {\r\n    //   sets = (\r\n    //     <div>\r\n    //       {activeSeries.repetitions.map((set, index) => (\r\n    //         <span key={index}>{set + \" \"}</span>\r\n    //       ))}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n    return (\r\n      <div>\r\n        <div className=\"exerciseName\">\r\n          {this.props.activeExercise !== null\r\n            ? this.props.activeExercise.name\r\n            : null}\r\n        </div>\r\n        <div className=\"trainingDayHolder\">\r\n          {this.getTrainingDaysList(\r\n            this.props.userSeries,\r\n            this.props.activeExercise,\r\n            this.props.activeDate\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Header from \"../Header.js\";\nimport { BmiCalculator } from \"../BmiCalculator/BmiCalculator\";\nimport { Calories } from \"../CaloriesCalculator/Calories\";\nimport yourTraining from \"../yourTraining/YourTraining\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Header />\n        <div className=\"contentContainer\">\n          <div className=\"imageHolder\">\n            <div className=\"informationsContainer\">\n              <Route exact path=\"/fit-app\" component={BmiCalculator} />\n              <Route path=\"/calories\" component={Calories} />\n              <Route path=\"/yourTraining\" component={yourTraining} />\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App/App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}